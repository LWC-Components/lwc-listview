name: CI

on: 
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  js_tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: bahmutov/npm-install@v1
    - name: Install package
      run: yarn
    - name: Run ESLint
      run: yarn lint:ci
    - name: Run Jest tests
      run: yarn test:ci
    - name: Upload code coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        name: js

  apex_tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install Salesforce CLI
      run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
          mkdir sfdx-cli
          tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
          ./sfdx-cli/install
    # - name: Populate auth file with SFDX_URL secret
    #   shell: bash
    #   run: 'echo ${{ secrets.SFDX_JWT_KEY }} > ./server.key'
    - name: Authenticate Dev Hub with JWT
      run: |
        echo github.head_ref
        echo $github.ref
        sfdx force:auth:jwt:grant --clientid ${{ secrets.SFDX_CONSUMER_KEY }} \
        --jwtkeyfile ./server.key --username ${{ secrets.SFDX_USERNAME }} \
        --setdefaultdevhubusername

    - name: Create scratch org
      run: sfdx force:org:create --definitionfile=config/project-scratch-def.json --setalias=scratch-org --setdefaultusername
    - name: Push source
      run: sfdx force:source:push
    - name: Run Apex tests
      run: sfdx force:apex:test:run --codecoverage --synchronous --resultformat=human --outputdir=coverage
    - name: Delete scratch org
      run: sfdx force:org:delete --targetusername=scratch-org --noprompt
    - name: Upload code coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        name: apex

  # code_coverage:
  #   runs-on: ubuntu-latest
  #   needs: [js_tests,apex_tests]

  #   steps:
  #   - name: Upload code coverage
  #     uses: codecov/codecov-action@v1
  #     with:
  #       token: ${{ secrets.CODECOV_TOKEN }} #required